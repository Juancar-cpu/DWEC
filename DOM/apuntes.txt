HTML, XML y XHTML
HTML es el lenguaje estandar, a base de etiquetas predefinidas
XML nosotros podemos definir las etiquetas

XHTML es una reformulación de HTML ya que este último se dejó de actualizar

DOM: Modelo de Objeto de Documento
Es una representación estructurada y jerarquica de un documento HTML, XHTML o XML
DOM es una interfaz que permite a programas acceder, manipular y actualizar la estructura, el contenido y estilo de un documento web

DOM es estandar.
En la programacion con js es habitual la manipulación de paginas. Con frecuencia hay que obtener el valor almacenado en algun elemento, crear un elemento de forma dinamica y añadirlo 
a la pagina o aplicar una animacion al elemento(ejemplo del innerHTML)

Estructura de documento: Cuando un navegador carga una pg web interpreta el codigo y crea una estructura de arbol que representa la jerarquía de eleemtos en el documento
Nodos del DOM: cada elemento, atributo, texto, comentario, etc. Los nodos pueden tener relación entre ellos y podemos hacer lo que queramos con cada uno
Acceso y manipulacion: 
Actualización dinamica

Tipos de nodos: document, element, attr, text, comment
elemento.innerHTML, elemento.textContent, elemento.value

document.anchor: buscar que son las anclas de js
getElementsByTagName(etiqueta)
getElementsByName(nombre)

document.documentElement
document.head
document.body
document.title
document.link
document.anchor
document.forms
document.images
document.scripts

Nosotros vamos a poder acceder al nodo a partir de su identificador con el getElementById, a partir de su clase con getElementsByClass y a partir de su etiqueta con getElementsByTagName
Los Elements devuelven un array de resultados

querySelector(selector): devuelve el priemr nodo seleccionado por el selector css identificador
querySelectorAll(selector)

Modificacion -> .innerHTML
Añadir atributo a elemento -> .setAttribute
Modificar clases -> .className


DOM: Procedimiento de creacion
document.createElement("p", "div", "img", etc)
document.getElementById("text").value -> para llevarnos el valor de los elementos

ver el appendChild, crateTextNode, createElement, replaceChild

El elemento padre se selecciona con parentElement. Se accede a los hijos con .childNodes y .children
Luego tenemos firstChild y lastChild
Para encontrar el eleemnto hermano con nextSibling y nextElementSibling. Este segundo se usa más

firstElementChildren[0], lastElementChildren[1]






