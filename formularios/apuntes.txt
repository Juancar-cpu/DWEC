Los formualrios es la razon por la que nacio javascript para validar formularios directamente en el lado cliente

La aparicion posterior de AJAX es cuando realmente javascript se empeiza a usar para la manipulacion dinamica
A pesar de ajax, js sigue siendo ffiable a la hora de trabajar formularios


Un formularioe s todo aquello que vaya entre las marcas form
Los navegadores, al cargar una pg web:
    Tienen un array forms con referencias a todos los formularios de la misma, al que se accede con document.forms
    Un array elements por cada formulario con todos los elementos que contienen dicho formulario(botones, liostas, etc), document.form[0].elements[2];(este metodo no se suele usar)


Si hay cambios de orden posteriores, añadidos o suprimidos, se va a descuadrar toda mi programacion del formulario. Utiliza los atributos name o id. Tambien se puede accedera los elementos con el document
form name="miPrimerForm"
form id="miPrimerForm"

var formPrincipal=document.getElementByYd("miForm")
var elementPrincipal=document.getElementByYd("miElement")


Los identificadores de los formularios no deben repetirse en ningun otro lado del codigo

<form name="miForm">
.......
</form>

let objetoForm = document.forms.miFormulario
let objetoForm = document.forms[miForm]



Un formulario es un elemento que permite recopilar informacion para enviarla a un servidor que va a tratarla y validarla

El que validemos en el cliente no significa que no vayamos a validar en el servidor. Validar en el lado cliente es un pequeño cribado antes de la validación de server, pues el lado cliente no se asegura de que la info no sea erronea o que este desactivada
La estructura de los form será HTML
Sus atributos imprescidibles son el action(a donde hay que enviar el formulario una vez ya relleno) y el method(get o post)


acept: tipo de ficheros que va a admitir el formulario
enctype
estos dos metodos no son necesarios


input es la etiqueta más usada en forms. Los input pueden ser de control de formulario(botones, cuatros de texto, etc) y campos de formulario (contiene los datos que se envian a traves del formulario)


atributos
type
    textarea
    button
    radiobutton
    checkbox
    select(desplegables)
name
value

Eventos
onlcik
onchange
onfocus
onblur

repasar los tipos de input


ENVIO Y VALIDACION DE formularios
La validacion consiste en invocar una funcion que analiza el tipo de dato., el onsubmit()
form.onsubmit();

Si un manejador de evento devuelve true o no devuelve nada se realiza el evento. Si devuelve false no se devuelve

Metodo submit()
document.getElementByYd("myForm").submit()
el evento submit envia el formulario como si se pulsara el boton submit
input type=submit value =enviar

Envio con boton
Admite más juego con HTML
Boton envio submit/ Boton borrar type reset


Envio con teclado
<input type=submit value=enviar accesskey="s"/>  [ALT]+s

Deshabilitar boton envio
<input type=submit value=enviar disabled>


En algunas aplicaciones, por motivos estéticos o de funcionalidad podemos no querer usar html, sino usar otro evento en lugar de un boton
Metodo submit: document.getElementByYd("myForm").submit() // o tambien var elem = document.getElementByYd("myForm")  elem.submit()


Manera analoga a click
document.getElementByYd("enviar").addEventListener('submit', validar. false)



preventDefault() -> Evita el envio predeterminado del formulario

onclick="this.disabled=true; this.value=enviando..." -> deshabilitar elemento tras pulsarlo. Solo vale en input de tipo button

html proporciona una validacion de formularios basica, mirar en w3schools. No todas sus etiquetas estan soportadas por todos los navegadores
ejemplos:
longitud basica=maxlength
patros expresiones regulares=pattern
mensaje=title con mensajes predefinidos
obligatorio=required