BOM: Browser Object Model o Modelo de Objetos del Navegador. Permite que js se comunique con el navegador obteniendo y manipulando sus caracteristicas
No existe un estandar oficial para BOM.
Son los llamados objetos de ALTO NIVEL y dependen del navegador
-Window
-Screen
-Navigator (permite ver las caracteristicas del navegador que esta usando el cliente)
-Location(me permite geolocalizar al usuario que esta accediendo a mi pg web, el ususario debe darme permiso)
-History(Historial. Antes se usaban cookies aquí)
-Document... Popup Alert, Timming, Cookies


Buscar estructura de cuando javascript ejecuta un navegador
En la estructura hay un objeto raiz llamado window con 2 roles:
-Es un objeto global para el codigo js
-Representa la ventana del navegador y proporciona métodos para controlarla

El objeto window representa la ventana abierta del navegador. Es un objeto propio del navegador.
Si tengo varias ventanas, tengo un <iframe> por cada una
Todos lo que usemos en el navegador y creemos se conbierten en mienbros del objeto winow, así podemos acceder a ellos. Las variables globales y el DOM son propiedades
No todos los métodos sirven para todos los navegadores


 window
-name:  representa el nombre de la ventana
-outerWidth y outerHeigth: son el ancho y el alto de la ventana incluyendo la barra de herramientas y la de scroll
-innerWidth y inner Heigth: similar a los anteriores pero sin incluir la barra de herramientas ni la de scroll.
-pageXOffset y pageYOffset:nos indica donde está situado el scroll horizontal y vertical, respectivamente
-screenX y screen Y: permite conocer la distancia de la ventana desde la izquierda y desde la arriba respectivamente. Puede dar valores negativos

Propiedades window
-frames: devuelve todos los iframe de la ventana
-frameElement: devuelve el frame en el que está insertada la ventana
-length: devuelve el numero de frames que tiene la ventana
-closed: devuelve un boolean que indica si la ventana está cerrada
-opener: devuelve la referencia de la ventana que creó la ventana actual
-parent: Nos devuelve la ventana padre de la ventana actual
-self: devuelve la ventana actual

Metodos window
-open: permite abrir una ventana, pudiendo indicarle que url se va a abrir y qué características va a tener. window.open(url, name, specs, replace)
-close:permite cerrar la ventana que ha llamado el metodo
-resizeBy y resizeTo: redimensiona la ventana a un numero de pixeles en relacion con el tamaño que tiene actualemente, o al numero de pixeles indicados, respectivamente
-moveBy y moveTo:mueve la ventana a un numero de pixeles respecto a la posición actual, o a una posición indicada, respectivamente




CUADROS DE DIALOGO
Todos son metodos de window que permiten interatcuar con el ususario dandole o pidiendo info
-Alert: Permite dar un mnesaje al usuaario. No recibe nada de el
-prompt:Muestra un mensaje al usuario. aDEMAS LE PERMITE PROPORCIONARNOS UN VALOR A LA VARIABLE A LA QUE ASOCIEMOS EL PROMPT. sEPARADO POR COMA PODEMOS PONER UN PLACEHOLDER EN LA POSICION DONDE EL USUARIO DEBE CONTESTAR (pone un string)
-confirm: Muestra un mensaje al usuario y le da la posibilidad de acpetar o negar. Si acepta devuelve true y si niega false. El valor se asigna a una variable a la que asociemos el confirm

INSTRUCCIONES DE TIEMPO
El objeto window permite ejecutar el codigo en intervalos de tiempo. Hay 3 metodos para ejecutar código asociado a instrucciones de tiempo
-setTimeout:Decimos que funcion queremos ejecutar y luego el numero de miliseg en el que lo va a hacer
-clearTimeout: El metodo se asigna a una variable. Si se activa la variable detiene la ejecución de un setInterval 
-setInterval: Hacemos que la funcion se repita cada cantidad de miliseg indicados. No tienen fin